@using Rentflix.Models
@model LoginViewModel

@{
    ViewBag.Title = "Log in";
}
    <link href="@Url.Content("~/Content/Login.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/Util.css")" rel="stylesheet" type="text/css" />
    <style>
        input[type="text"], input[type="password"]{
            border: none !important;
            min-width:100%;
            max-width:100%;
        }
    </style>
<div class="limiter">
    <div class="container-login100" style="background-image: url('images/bg-01.jpg');">
        <div class="wrap-login100 p-l-110 p-r-110 p-t-62 p-b-33">
            <img src="~/MovieImages/logo.png" style="margin:0 20%" />
            <span class="login100-form-title p-b-53">
                Sign In With
            </span>
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login100-form validate-form flex-sb flex-w", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="p-t-31 p-b-9">
                    <span class="txt1">
                        @Html.LabelFor(m => m.Email)
                    </span>
                </div>
                <div class="wrap-input100 validate-input" data-validate="Email is required">
                    @Html.TextBoxFor(m => m.Email, new { @class = "input100" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    <span class="focus-input100"></span>
                </div>
                <div class="p-t-13 p-b-9">
                    <span class="txt1">
                        @Html.LabelFor(m => m.Password)
                    </span>

                </div>
                <div class="wrap-input100 validate-input" data-validate="Password is required">

                    @Html.PasswordFor(m => m.Password, new { @class = "input100" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    <span class="focus-input100"></span>
                </div>
                <div class="container-login100-form-btn m-t-17">
                    <input type="submit" value="Log in" class="login100-form-btn" style="max-width: none;" />
                </div>
                <div class="w-full text-center p-t-55">
                    <span class="txt2">
                        Not a member?
                    </span>
                    <a href="@Url.Action("Register","Account")" class="txt2 bo1">
                        Sign up now
                    </a>
                </div>

                @* Enable this once you have account confirmation
            </div>enabled for password reset functionality
                <p>
                    @Html.ActionLink("Forgot your password?", "ForgotPassword")
                </p>*@
            }
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
