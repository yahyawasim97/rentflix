@model Rentflix.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<link href="@Url.Content("~/Content/Login.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/Util.css")" rel="stylesheet" type="text/css" />
<style>
    input[type="text"], input[type="password"] {
        border: none !important;
        min-width: 100%;
        max-width: 100%;
    }
</style>
<div class="limiter">
    <div class="container-login100" style="background-image: url('images/bg-01.jpg');">
        <div class="wrap-login100 p-l-110 p-r-110 p-t-62 p-b-33">
            <img src="~/MovieImages/logo.png" style="margin:0 20%"/>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "login100-form validate-form flex-sb flex-w", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <span class="login100-form-title p-b-53">
                    Register Now
                </span>
                <div class="p-t-31 p-b-9">
                    <span class="txt1">
                        @Html.LabelFor(m => m.Email)
                    </span>
                </div>
                <div class="wrap-input100 validate-input" data-validate="Email is required">
                    @Html.TextBoxFor(m => m.Email, new { @class = "input100" })
                    <span class="focus-input100"></span>
                </div>
                <div class="p-t-31 p-b-9">
                    <span class="txt1">
                        @Html.LabelFor(m => m.Password )
                    </span>
                </div>
                <div class="wrap-input100 validate-input" data-validate="Password is required">
                    @Html.PasswordFor(m => m.Password, new { @class = "input100" })
                </div>

                <div class="p-t-31 p-b-9">
                    <span class="txt1">
                        @Html.LabelFor(m => m.ConfirmPassword)
                    </span>
                </div>
                <div class="wrap-input100 validate-input" data-validate="Confirm Password is required">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input100" })
                </div>

                <div class="p-t-31 p-b-9">
                    <span class="txt1">
                        @Html.LabelFor(m => m.Phone)
                    </span>
                </div>
                <div class="wrap-input100 validate-input" data-validate="Phone is required">
                    @Html.TextBoxFor(m => m.Phone, new { @class = "input100" })
                </div>
                <div class="p-t-31 p-b-9">
                    <span class="txt1">
                        @Html.LabelFor(m => m.DrivingLisence)
                    </span>
                </div>
                <div class="wrap-input100 validate-input" data-validate="Driving Lisence is required">
                    @Html.TextBoxFor(m => m.DrivingLisence, new { @class = "input100" })
                </div>
                <div class="container-login100-form-btn m-t-17">
                    <input type="submit" class="login100-form-btn" style="max-width: none;" value="Register" />
                </div>

            }
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
